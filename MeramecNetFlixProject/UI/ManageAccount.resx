<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExp
        bm8CEAAAbW50clJHQiBYWVogB84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAA
        AAEAAPbWAAEAAAAA0y1IUCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAARY3BydAAAAVAAAAAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAA
        AhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAA
        A0wAAACGdmlldwAAA9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAA
        BDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3
        bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAA
        AAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAA
        b6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAA
        ABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYx
        OTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2
        LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRl
        c2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAA
        AAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABM
        CVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1
        cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3
        AHwAgQCGAIsAkACVAJoAnwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQET
        ARkBHwElASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHp
        AfIB+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAML
        AxYDIQMtAzgDQwNPA1oDZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+
        BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZI
        BlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghu
        CIIIlgiqCL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3Arz
        CwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e
        DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExEx
        EU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTw
        FRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkg
        GUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3D
        HeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLd
        IwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhx
        KKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6C
        Lrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUT
        NU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76Dwn
        PGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPA
        RANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkvi
        TCpMcky6TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSP
        VNtVKFV1VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3J
        XhpebF69Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeT
        Z+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHw
        cktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzh
        fUF9oX4BfmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhp
        iM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSK
        lPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH
        obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6h
        rxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8Ibyb
        vRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2
        y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp2
        2vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb
        6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn
        +3f8B/yY/Sn9uv5L/tz/bf///9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAgICAgICAgICAgIDAwMDAwMDAwMD/9sAQwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgBHADPAwERAAIRAQMRAf/EAB0A
        AQACAgMBAQAAAAAAAAAAAAAGCAUHAQMEAgr/xABFEAACAgECBAIGBQcICwAAAAAAAQIDBBEFITESBkET
        UWFxIhQHgZGhMkJSYnKCsjNzwZIjU5OUFRaiwoOjszREVGR0Zf/EABQBAQAAAAAAAAAAAAAAAAAAAAD/
        xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwD9tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAMBu3c+zbM3DLy1LIX/AEuOvPyOWukoRfTU2uXW46gQLN+Zlzbjt221wX4b
        c22Vja9dFHlKL/2kgMBZ8wO5Jt9N+NTq+CrxKml6l5vmvT26gcV9/wDckH72Rj28ddLMSlLly/oo1vQD
        OYfzMyotLcNtouXJ2Ylk6JJeny7fPjN/rRQE72nu3ZN3ca6MryMmWmmLlpUXSb5Rg3KVVsm/CEpP1ASU
        AAAAAAAAAAAAAAAAAAAAHVffTjU2X5FkKaaoOdltklGEIR5uUnwQGmu4+/crNlZibPKeJh6uMsrjHKyF
        y1g+eNU/DT32ubXFAa6bbbbbbbbbb1bb4ttvi22BwAAAAAE87d75ztrlDG3GVmdgcIpyfVlY0eSddkuN
        sIr8Eny5NcmG68TLxs/Hqy8S6F+PdHqrsg9U1yaaejjOL4NPRp8GB6QAAAAAAAAAAAAAAAADiUlFOUmo
        xinKUpNJRSWrbb4JJAaF7w7os3rJliYs3Ha8abVaTa+Lsi9PiLFw1h/Vp8lx5vgEKAAAAAAAAASntbuW
        /YMxKblZt2RKKy6OfT4LJpXhdWua/HHg/BoLB1W131V30zjZVdCNlVkHrGcJpSjKL8VKLA7AAAAAAAAA
        AAAAAAAGuvmDvksLCr2rHn037hFyyJRfvQwovpcfSviZpx/RjJeIGlAAAAAAAAAAABt35db5KyFux5E9
        XTGWRguT4+W5a30L9CUuuK56OXggNpgAAAAAAAAAAAAAAAK2dy7i903vcMrqcq/PlRj+hUY/9FW4+hTU
        er2yYGCAAAAAAAAAAAGR2nPntm5YWfBvXGyITklznVr03V+yyqUo/SBZ2MozjGcGpRnFSjJcpRktU16m
        mB9AAAAAAAAAAAAAA8O6ZDxNt3DKT0lj4WVfFrn1VUTnHT16xAq6AAAAAAAAAAAAACynbOQ8nYNotbbf
        wNNUm+blRHyJN+tyrAzgAAAAAAAAAAAAAMJ3Lr/l/eNOf+HZX1eVLX7AK1AAAAAAAAAAAAAAsN2Tr/lf
        a9efTlfV8dlafYBKgAAAAAAAAAAAAAeLcsd5e3Z+Klq8nDyqEvzrqJ1r7ZAVcAAAAAAAAAAAAABZXtvH
        eLsO00taSWDRZJPmp3x8+SfrUrGBmwAAAAAAAAAAAAAAK4d07c9r33Px+npqsullY/DROjJbtio+quTc
        PbECPAAAAAAAAAAADJ7Nt8913TCwIptZF8I2Nc40RfXfP9SmMn9AFnIxUUoxSUYpRilySS0SXqSA5AAA
        AAAAAAAAAAAAgHf+xvcNvjuWPHqyttjN2RS963Dl71iXpdEl1r83q8QNHAAAAAAAAAAADcXy72OVFNm9
        ZENLMqDpwoyXGOOpf0t2j5edOKUfHpi/CQGzgAAAAAAAAAAAAAAABrXg+KfBp+IGjO8u1Z7TfPcMGty2
        y+bcowWvwNs3+7klyx5yfuPkvuvw1CBAAAAAAAAAJh2n2vbvuUr74yr2vHmnfZxXxE4tP4al8NXJffkv
        ux9bQG/oQhXCFdcYwrrjGEIQSjGEIJRjGMVooxjFaJeCA+gAAAAAAAAAAAAAAAAD4srrurnVbCFldkZQ
        srnFShOElpKMoyTUoyT4pgah7j7AuplPL2OLuoes54DlrfV4v4aUv30PzW+teHV4BrKcJ1zlXZCVdkG4
        zhOLhOMlwcZRkk4tehgfIAAAA5ScmoxTlKTSjFJttt6JJLi22BsTt3sLLzZV5W8Rnh4fCUcb7uXkLmlN
        c8at+Ovv+hLmBuXHx6MSirGxqoU0UwUKqq10whFeCXpb4t82+LA7gAAAAAAAAAAAAAAAAAAAAYjc9h2n
        eI6Z+HVbNLSN8dasiOnJK+txscV6G3H1AQPN+WdMnKW37nZWtfdqy6Y2r2edS6mtP0GBgbPlxv0G+i7b
        rUuXTffFv6J40Un9IHFfy536enXbt1Sb49WRdJpenSvGmn9YGcw/llFNS3Dc3Ja8asOlRbXqvuctP7MC
        dbX25s+z6SwsOCuS0eTbrdkPho2rLNfL6lzUFFP0AZwAAAAAAAAAAAAAAAAAAAAACMbn3hsO1uULctZN
        8eDx8JLIsTXNSmpRorknzUpp+oCFZfzNtbksHa64rV9NmXfKba8HKmmFfS/V1sCP5Hf3clzbrycfFT/D
        j4lMkvY8mORP7QMe+7+5JNt7tkav0RoivojGpJAF3f3Immt2yNV6Y0yX0qVTTA91HfvctTTnl05CX4b8
        THSfqbohRP7dQJDh/My9NLcNsqsX4rMO2dTS8WqbvOUn+ugJxtfd2xbq4105aoyJaaY2Wlj2tvlGDk3T
        bL1QlJgSUAAAAAAAAAAAAAAAAAAYrd95wNkxnk51vQnqqqo6Svvmlr0U16pyfpb0jHxaA0lvveO6bzKd
        UJywcF6pYtE2pWRf/c3Lpldqua4Q9XiBEQAAAAAAAAEy2DvTc9ncKL5Sz8BaRdFs9baY/wDj3S1lHp8I
        y1jpwWnMDdu17rg7xixy8G5W1y4Ti9FbTPTV1XV6twmvqfNNriBkQAAAAAAAAAAAAAAMTvW8YuyYFubk
        vXp9ymlNKeRdJPoqhz0101b/AAxTYFd923bM3nMszc2xynJ6V1rXyqKtW400xbfTCOvtb4vVtsDGgAAA
        AAAAAAADL7LvWZseZHLxJaxekciiTflZNWurrsXg1r7sucX9KYWJ2vc8Xd8KnOxJ9VVq0lF/fqtjp5lN
        i8J1t+xriuDTAyAAAAAAAAAAAAAcSkopyk1GMU5SlJpKKS1bbfBJICvHde/S33c5zhJ/A4rlThQ4pOGv
        v5DT/HkSjr6VFJeAEXAAAAAAAAAAAAABMuzO4Hs24xovsa2/OlGvITfu02v3aslfk9Lek/zHrx0QG/gA
        AAAAAAAAAAAgvf27vb9o+Dql05G5ylRwfGOLBJ5Mv11KMPZN+gDRIAAAAAAAAAAAAAAACwPZW8Pddmqj
        bPqysBrEv1espwjHXHtfi+urg2+cosCXgAAAAAAAAAACv3e+5f4hv+TGMtacBLBq48Oqlt3vTlr8RKS1
        8UkBEAAAAAAAAAAAAAAAAE47A3J4W+RxZS0p3KqWPJa8FfDW3Hm/TLVSgv0wN8AAAAAAAAAAHkz8qODh
        ZeZP7uLjXZDXp8quU+n2ya0QFXbLJ22Ttsk5WWTlZOT5ynNuUpP1tsD4AAAAAAAAAAAAAAAAd2NfZi5F
        GTU9Lce6q+t+idU42Rf86IFpMa+GVj0ZNT1ryKar636YXQjZB/zZAdwAAAAAAAACG9+Zfw3bmTBPSWZd
        j4kX+lPzpr9aqiS9jA0CAAAAAAAAAAAAAAAAAALCdk5by+3MHqes8bzcSfqVNkvKX0USgBLAAAAAAAAA
        GrPmdkaUbTiJ/ftyciS/hQqrg37fOloBqIAAAAAAAAAAAAAAAAAAbi+WWT1YW6Yjf7nJpyEv/YqlW2v7
        sgNnAAAAAAAAANJ/Mm7r3jEoT4U7fCT9U7b72/8ARhEDXYAAAAAAAAAAAAAAAAAA2P8ALW/o3bOx29Fd
        gOxL0yovqSXt6bmBukAAAAAAAABoDvy3zO5s2P8AU1YlS/utVr+20CHAAAAAAAAAAAAAAAAAACY9h2+X
        3Lhx10V9WXU/oxrLkvrqQG/wAAAAAAAAFcu7Z+Z3Ju0vRk9H9lVXX/qARwAAAAAAAAAAAAAAAAAASHtO
        zyu49olrprlxr/toTq0+nrAseAAAAAAAAArP3DPr37eZf/TzYr2QyLIr9kDDgAAAAAAAAAAAAAAAAADK
        7FPy972if5O54Dfs+Kq1+wCzYAAAAAAAACsG7y6923SX5W45svrybX/KBjgAAAAAAAAAAAAAAAAAB7Nv
        l0bhgz/JzMaX826D/kAtIAAAAAAAAAq3uD6s/Ol6czJf13TYHjAAAAAAAAAAAAAAAAAAHdjy6b6Zfk3V
        y+qcWBaoAAAAAAAABVjMeuXlP05N7/3sgPMAAAAAAAAAAAAAAAAAAOU9Gn6HqBa8AAAAAAAABVfL45WS
        1yeRd/xJAecAAAAAAAAAAAAAAAAAAALXQesIP0wi/rSA+gAAAAAAAKq5H/MX/wAa39uQHSAAAAAAAAAA
        AAAAAAAAAFrKf3VX8OH7KA7AAAAAAAAKr5WnxWTpy+Iu005aeZLTQDzgAAAAAAAAAAAAAAAAAABayn9z
        V/Dh+ygOwAAA/9k=
</value>
  </data>
</root>